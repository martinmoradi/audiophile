name: Unit Tests and Coverage
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_URL: ${{ vars.POSTGRES_URL }}
      POSTGRES_PRISMA_URL: ${{ vars.POSTGRES_PRISMA_URL }}
      POSTGRES_URL_NO_SSL: ${{ vars.POSTGRES_URL_NO_SSL }}
      POSTGRES_URL_NON_POOLING: ${{ vars.POSTGRES_NON_POOLING }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install pnpm and dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Check if tests should run
        id: check_tests
        run: |
          if [[ "${{ github.head_ref || github.ref_name }}" == "feature/db-setup" ]]; then
            echo "::set-output name=should_run::false"
          else
            echo "::set-output name=should_run::true"
          fi

      - name: Run Vitest tests with coverage
        if: steps.check_tests.outputs.should_run == 'true'
        run: pnpm test:coverage

      - name: Upload coverage reports to Codecov
        if: steps.check_tests.outputs.should_run == 'true'
        uses: codecov/codecov-action@v4.0.1
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-audiophile
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
